services:
  postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/data/postgres
    ports:
      - 5432:5432
    volumes:
      - postgres:/data/postgres
      - logs:/logs:z
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend
    restart: unless-stopped
  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    volumes:
      - ./src:/home/node/src
    container_name: app
    environment:
      - PORT=${PORT}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - postgres
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  logs: